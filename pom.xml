<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <groupId>at.gepardec.training.cdi</groupId>
    <artifactId>cdi-training</artifactId>
    <version>${revision}</version>
    <packaging>war</packaging>

    <properties>
        <!-- Plugin Versions -->
        <compiler-plugin.version>3.8.1</compiler-plugin.version>
        <war-plugin.version>3.3.1</war-plugin.version>
        <surefire-plugin.version>3.0.0-M5</surefire-plugin.version>
        <wildfly-plugin.version>2.1.0.Beta1</wildfly-plugin.version>

        <!-- Dependency Versions -->
        <wildfly.version>22.0.0.Final</wildfly.version>
        <krazo.version>1.1.0</krazo.version>
        <krazo-ext-thymeleaf.version>1.1.0</krazo-ext-thymeleaf.version>
        <commons-lang3.version>3.11</commons-lang3.version>

        <!-- Test Dependency Versions -->
        <version.weld-junit5>2.0.2.Final</version.weld-junit5>
        <version.weld-se>3.1.5.Final</version.weld-se> <!-- Wildfly 22 runs on this version -->
        <version.mockito-junit-jupiter>3.6.0</version.mockito-junit-jupiter>
        <version.mockito-core>2.24.0</version.mockito-core>

        <!-- Plugin Properties -->
        <maven.compiler.parameters>true</maven.compiler.parameters>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <revision>1.0.0-SNAPSHOT</revision>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.wildfly.bom</groupId>
                <artifactId>wildfly-jakartaee8-with-tools</artifactId>
                <version>${wildfly.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Wildfly Spec Dependencies -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.spec.javax.interceptor</groupId>
            <artifactId>jboss-interceptors-api_1.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_4.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.spec.javax.enterprise.concurrent</groupId>
            <artifactId>jboss-concurrency-api_1.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Wildfly Runtime Dependencies -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Application Dependencies -->
        <dependency>
            <groupId>org.eclipse.krazo</groupId>
            <artifactId>krazo-core</artifactId>
            <version>${krazo.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.eclipse.krazo</groupId>
            <artifactId>krazo-resteasy</artifactId>
            <version>${krazo.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.eclipse.krazo.ext</groupId>
            <artifactId>krazo-thymeleaf</artifactId>
            <version>${krazo-ext-thymeleaf.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-junit5</artifactId>
            <version>${version.weld-junit5}</version>
            <scope>test</scope>
            <exclusions>
                <!-- Newer as Wildfly uses, and we want to be consistent -->
                <exclusion>
                    <groupId>org.jboss.weld.se</groupId>
                    <artifactId>weld-se-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- This is the version of CDI Wildfly 22 uses -->
        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se-core</artifactId>
            <version>${version.weld-se}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${version.mockito-junit-jupiter}</version>
            <scope>test</scope>
            <exclusions>
                <!-- The extension is broken with used mockito-core:2.21.0 -->
                <exclusion>
                    <groupId>org.mockito</groupId>
                    <artifactId>mockito-core</artifactId>
                </exclusion>
                <!-- Uses newer junit-jupiter-api:5.4.2 but weld-junit provides 5.4.1 -->
                <exclusion>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${version.mockito-core}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${war-plugin.version}</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${wildfly-plugin.version}</version>
                <configuration>
                    <version>${wildfly.version}</version>
                    <javaOpts>
                        <javaOpt>-agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n</javaOpt>
                    </javaOpts>
                    <commands>
                        <command>/subsystem=logging/root-logger=ROOT:write-attribute(name="level", value="TRACE")
                        </command>
                    </commands>
                    <timeout>120</timeout>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <!-- No need to test during the maven build yet  -->
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
